/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

* {
    margin: 0;
    padding: 0;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    background-color: #ffe;
    padding: 8px;
}

hr {
    margin: 4px auto 8px;
}

.main_container {
    width: 80%;
    margin: 0 auto;
}

.header {
    border-bottom: 1px solid black;
    padding-bottom: 4px;
    margin: 4px auto 12px auto;

    display: flex;
    justify-content: space-between;
}

.maze_form_container {
    border-bottom: 1px solid black;
    padding-bottom: 4px;
    margin: 4px auto 8px auto;
}

.maze_entry {
    padding: 4px;
}

.maze_entry:nth-child(odd) {
    background-color: #bbd;
}

.journey_entry {
    padding: 4px;
}

.journey_entry:nth-child(odd) {
    background-color: #bdb;
}


/*

*/

.maze {
    background-color: black;
    position: relative;
    /* display: inline-block; */
}

.maze_cell {
    display: inline-block;
    position: absolute;
    margin: 1px;
}

.visited {
    background-color: aqua;
}

.start {
    background-color: rgb(1, 165, 1); /* rgb(243, 187, 104) */
}

.end {
    background-color: red;
}

.seen {
    background-color: blue;
    color: white;
}

.seenend {
    background: linear-gradient(90deg, blue, red);
}

.barrier {
    /* background-color: red; */
    border: 1px solid yellow;
}

.current {
    /* background-color: purple; */
    animation: current_animation 0.6s 0s infinite alternate-reverse;
    /* animation-name: current_animation;
    animation-delay: 4s;
    animation-duration: 0.6s;
    animation-iteration-count: infinite;
    animation-direction: alternate; */
}

@keyframes current_animation {
    from {
        background: purple;
    }
    to {
        background: auto;
    }
}

.controls {
    display: inline-block;
    vertical-align: top;
}

.filled, input[type="submit"] {
    background-color: black;
    color: white;
    border: 1px solid aqua;
    padding: 2px 6px;
}

.filled {
    text-align: center;
    text-decoration: none;
    width: 30px;
    display: inline-block;
    margin: 2px;
    font-size: 20px;
}

.filled:hover, input[type="submit"]:hover {
    background-color: rgb(23, 141, 161);
    border: 1px solid rgb(12, 1, 1);;
}

.inline_button {
    display: inline;
}

input[type="submit"] {
    font-size: 14px;
    margin: 2px auto;
}

/*
input[type="submit"] {
    background-color: darkblue;
    color: white;
    padding: 2px;
    border: 1px solid black;
}
*/

/* motion simulation */

/*
leave & enter from each direction

--> I think that we can do this, and then run the reverse, so only half
*/

/*
ugh... I have to make the transitions for every type of cell:
    - start, visited, end

    Yeah, this isn't worth it for the time involved
*/

/*
.test_gradient_animation {
    background: aqua;
    animation: gradient 10s ease 1 1s, current_animation 2s 4s infinite alternate;
}

@keyframes gradient {
    0% {
        background: linear-gradient(90deg, black, black, purple, purple);
        background-size: 400% 100%;
		background-position: 0% 50%;
    }
	50% {
        background: linear-gradient(90deg, black, black, purple, purple);
        background-size: 400% 100%;
		background-position: 0% 50%;
	}
	100% {
        background: linear-gradient(90deg, black, black, purple, purple);
        background-size: 400% 100%;
		background-position: 100% 50%;
    }
}
*/